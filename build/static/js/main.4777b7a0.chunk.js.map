{"version":3,"sources":["components/Account/Account.module.scss","App.module.scss","services/Ethereum.js","services/LrcService.js","components/InputSlider/InputSlider.js","components/utils.js","components/ChangeAmount/ChangeAmount.jsx","components/TokenAmount.jsx","components/Claim/ClaimComponent.jsx","components/Withdraw/Withdraw.jsx","components/Staking/StakingComponent.jsx","components/Account/Account.jsx","components/LinkToEtherscan.js","components/Connect.js","App.js","serviceWorker.js","index.js","components/InputSlider/InputSlider.module.scss","components/Staking/staking.module.scss","components/ChangeAmount/ChangeAmount.module.scss","components/Claim/ClaimComponent.module.scss","components/Withdraw/withdraw.module.scss"],"names":["module","exports","web3","getWeb3","a","window","ethereum","Web3","enable","console","error","log","initTruffle","loopringContract","userStakingPoolContract","protocolFeeVaultContract","initWeb3","then","eth","Contract","LrcContract","abi","networks","address","UserStakingPool","ProtocolFeeVault","getEthAccounts","getAccounts","LrcService","getLrcBalance","account","methods","balanceOf","call","balance","utils","toBN","catch","getLrcAllowance","spenderAddress","_address","allowance","setLrcAllowance","lrcAmountInWei","approve","send","from","result","getUserStaking","stake","gasLimit","claimReward","claim","withdraw","getTotalStaking","getProtocolFeeVaultValue","InputSlider","onChange","initialPercent","disabled","init","Math","min","ceil","React","useState","rangePercent","setRangePercent","useEffect","className","styles","type","value","e","target","style","filter","h4Container","h4Subcontainer","transform","left","BN","convertLrcToWei","amountInLrc","toWei","displayWei","amountInWei","isBN","fromWei","undefined","bn","Error","getWaitTimeInDays","waitTimeInSec","waitTimeInHours","days","floor","toFixed","hours","mins","getClaimingDate","now","Date","toLocaleDateString","ChangeAmount","text","max","amount","submitAmountChange","tokenSymbol","inputRef","useRef","hasChanged","setHasChanged","newAmount","setNewAmount","updateAmount","newValue","current","isDisabled","changeAmount","ref","onBlur","newLrcValue","onClick","submit","sliderValue","amountBN","muln","divn","TokenAmount","symbol","stringWithDot","split","integerPart","fractionalPart","fontSize","paddingLeft","ClaimComponent","stakingData","refreshAccountInfo","_","setError","totalStaking","setTotalStaking","totalPrize","setTotalPrize","pendingReward","rewardWaitTime","feeAmount","canClaimReward","Withdraw","setAmount","withdrawalWaitTime","canWithdraw","toString","StakingComponent","setStakingData","message","setMessage","maxStakeAmount","b","abn","bbn","weiMin","newStakeAmount","setNewStakeAmount","refreshAddressStaking","staking","Account","setBalance","setAllowance","setIsLoading","useCallback","allowanceInWei","finally","newAllowance","LinkToEtherscan","label","children","href","getUrl","Connect","onConnected","setAccounts","connectContainer","connectButton","preventDefault","_accounts","App","accounts","selectedAccount","setSelectedAccount","connected","setConnected","length","container","testBtn","map","key","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4777b7a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Account\":\"Account_Account__11gMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__7Ix7K\",\"container\":\"App_container__3fWMl\",\"connectContainer\":\"App_connectContainer__GscF1\",\"connectButton\":\"App_connectButton__2QeA8\",\"testBtn\":\"App_testBtn__2zlhN\"};","import Web3 from 'web3'\r\nimport LrcContract from '../contracts/LRC_v2.json'\r\nimport UserStakingPool from '../contracts/UserStakingPool.json'\r\nimport ProtocolFeeVault from '../contracts/ProtocolFeeVault.json'\r\n\r\nlet web3 = null\r\nconst getWeb3 = async () => {\r\n  if (web3) return web3\r\n\r\n  if (window.ethereum) {\r\n    web3 = new Web3(window.ethereum)\r\n    try {\r\n      // Request account access if needed\r\n      await window.ethereum.enable()\r\n      // Acccounts now exposed\r\n      return web3\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  // Legacy dapp browsers...\r\n  else if (window.web3) {\r\n    // Use Mist/MetaMask's provider.\r\n    web3 = window.web3\r\n    console.log('Injected web3 detected.')\r\n    return web3\r\n  }\r\n}\r\n\r\nexport const initTruffle = async () => {\r\n  const localNode = 'http://127.0.0.1:9545/' //Truffle develop\r\n  // const localNode = 'http://127.0.0.1:7545' //GANASHE node\r\n  console.log(`No web3 instance injected, using ${localNode} web3.`)\r\n  web3 = new Web3(localNode)\r\n}\r\n\r\nconst lrcNetworkDeploymentKey = 'prod'\r\nexport let loopringContract = null\r\n\r\nconst uspNetworkDeploymentKey = 'prod'\r\nexport let userStakingPoolContract = null\r\n\r\nconst ProtocolFeeVaultDeploymentKey = 'prod'\r\nexport let protocolFeeVaultContract = null\r\n\r\nexport const initWeb3 = async () => {\r\n  return getWeb3().then((web3) => {\r\n    loopringContract = new web3.eth.Contract(\r\n      LrcContract.abi,\r\n      LrcContract.networks[lrcNetworkDeploymentKey].address,\r\n    )\r\n\r\n    userStakingPoolContract = new web3.eth.Contract(\r\n      UserStakingPool.abi,\r\n      UserStakingPool.networks[uspNetworkDeploymentKey].address,\r\n    )\r\n\r\n    protocolFeeVaultContract = new web3.eth.Contract(\r\n      ProtocolFeeVault.abi,\r\n      ProtocolFeeVault.networks[ProtocolFeeVaultDeploymentKey].address,\r\n    )\r\n\r\n    return web3\r\n  })\r\n}\r\n\r\nexport const getEthAccounts = async () => {\r\n  if (web3) return web3.eth.getAccounts()\r\n  else return []\r\n}\r\n","import Web3 from 'web3'\r\nimport {\r\n  loopringContract,\r\n  userStakingPoolContract,\r\n  protocolFeeVaultContract,\r\n} from './Ethereum'\r\n\r\nconst getLrcBalance = (account) => {\r\n  console.log('getLrcBalance', account)\r\n\r\n  return loopringContract.methods\r\n    .balanceOf(account)\r\n    .call()\r\n    .then((balance) => {\r\n      console.log(`Acc ${account} balance:`, balance)\r\n      return Web3.utils.toBN(balance)\r\n    })\r\n    .catch((error) => {\r\n      console.error(error)\r\n      return -1\r\n    })\r\n}\r\n\r\nconst getLrcAllowance = (account) => {\r\n  const spenderAddress = userStakingPoolContract._address\r\n  console.log('getLrcAllowances', { account, spenderAddress })\r\n\r\n  return loopringContract.methods\r\n    .allowance(account, spenderAddress)\r\n    .call()\r\n    .then((allowance) => {\r\n      console.log(`Acc ${account} allowance:`, allowance)\r\n      return Web3.utils.toBN(allowance)\r\n    })\r\n    .catch((error) => {\r\n      console.error(error)\r\n      return -1\r\n    })\r\n}\r\n\r\nconst setLrcAllowance = (address, lrcAmountInWei) => {\r\n  const spenderAddress = userStakingPoolContract._address\r\n  console.log('setLrcAllowance', { address, spenderAddress, lrcAmountInWei })\r\n\r\n  return loopringContract.methods\r\n    .approve(spenderAddress, lrcAmountInWei)\r\n    .send({ from: address })\r\n    .then((result) => result)\r\n}\r\n\r\nconst stake = (address, lrcAmountInWei) => {\r\n  console.log('stake', { address, lrcAmountInWei })\r\n\r\n  return userStakingPoolContract.methods\r\n    .stake(lrcAmountInWei)\r\n    .send({ from: address, gasLimit: 2000000 })\r\n}\r\n\r\nconst getUserStaking = (address) => {\r\n  console.log('getUserStaking', address)\r\n  return userStakingPoolContract.methods.getUserStaking(address).call()\r\n}\r\n\r\nconst claimReward = (address) => {\r\n  console.log('claimReward', address)\r\n  return userStakingPoolContract.methods.claim().send({ from: address })\r\n}\r\n\r\nconst withdraw = (address, lrcAmountInWei) => {\r\n  console.log('withdraw', { address, lrcAmountInWei })\r\n  return userStakingPoolContract.methods\r\n    .withdraw(lrcAmountInWei)\r\n    .send({ from: address })\r\n}\r\n\r\nconst getTotalStaking = () => {\r\n  console.log('getTotalStaking')\r\n\r\n  return userStakingPoolContract.methods.getTotalStaking().call()\r\n}\r\n\r\nexport const getProtocolFeeVaultValue = () => {\r\n  console.log('getProtocolFeeVaultValue')\r\n  return loopringContract.methods\r\n    .balanceOf(protocolFeeVaultContract._address)\r\n    .call()\r\n    .then((balance) => {\r\n      console.log('protocolFeeVaultContract.address', {\r\n        address: protocolFeeVaultContract._address,\r\n        balance,\r\n      })\r\n      return Web3.utils.toBN(balance)\r\n    })\r\n    .catch((error) => {\r\n      console.error(error)\r\n      return 0\r\n    })\r\n}\r\n\r\nconst LrcService = {\r\n  getLrcBalance,\r\n  getLrcAllowance,\r\n  setLrcAllowance,\r\n  getUserStaking,\r\n  stake,\r\n  claimReward,\r\n  withdraw,\r\n  getTotalStaking,\r\n  getProtocolFeeVaultValue,\r\n}\r\nexport default LrcService\r\n","import React from 'react'\r\nimport styles from './InputSlider.module.scss'\r\n\r\nfunction InputSlider({ onChange, initialPercent = 0, disabled = false }) {\r\n  const init = Math.min(100, Math.ceil(initialPercent))\r\n  const [rangePercent, setRangePercent] = React.useState(0)\r\n\r\n  React.useEffect(() => {\r\n    setRangePercent(init)\r\n  }, [init])\r\n\r\n  const handleChange = (e) => {\r\n    onChange(e.target.value)\r\n    setRangePercent(+e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.InputSlider} disabled={disabled}>\r\n      <input\r\n        type=\"range\"\r\n        value={rangePercent}\r\n        onChange={handleChange}\r\n        style={{ filter: `hue-rotate(-${rangePercent}deg)` }}\r\n        disabled={disabled}\r\n      />\r\n      <div className={styles.h4Container}>\r\n        <div className={styles.h4Subcontainer}>\r\n          <h4\r\n            style={{\r\n              transform: `translateX(-50%) scale(${1 + rangePercent / 100})`,\r\n              left: `calc(20% + ${rangePercent}%)`,\r\n            }}\r\n          >\r\n            {rangePercent}\r\n            <span style={{ filter: `hue-rotate(-${rangePercent}deg)` }}></span>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputSlider\r\n","import Web3 from 'web3'\r\n\r\nconst BN = Web3.utils.BN\r\n\r\nfunction isNumberGEqZero(value) {\r\n  return typeof value == 'number' && value >= 0\r\n}\r\n\r\nexport function convertLrcToWei(amountInLrc) {\r\n  return Web3.utils.toWei(amountInLrc, 'ether')\r\n}\r\n\r\nexport function weiMin(a, b) {\r\n  if (a === null || a === undefined) return b\r\n  if (b === null || b === undefined) return a\r\n\r\n  const abn = new BN(a)\r\n  const bbn = new BN(b)\r\n\r\n  return Web3.utils.BN.min(abn, bbn)\r\n}\r\n\r\nexport function displayWei(amountInWei) {\r\n  // console.info('displayWei', { type: typeof amountInWei, amountInWei })\r\n\r\n  if (Web3.utils.isBN(amountInWei)) {\r\n    return Web3.utils.fromWei(amountInWei, 'ether')\r\n  }\r\n\r\n  if (typeof amountInWei === 'string') {\r\n    return Web3.utils.fromWei(amountInWei, 'ether')\r\n  }\r\n\r\n  if (amountInWei === null || amountInWei === undefined) return '0.0'\r\n\r\n  if (isNumberGEqZero(amountInWei)) {\r\n    const bn = new Web3.utils.BN(amountInWei)\r\n    return Web3.utils.fromWei(bn, 'ether')\r\n  }\r\n\r\n  throw Error('displayWei error for:' + amountInWei)\r\n}\r\n\r\nexport function getWaitTimeInDays(waitTimeInSec) {\r\n  const waitTimeInHours = waitTimeInSec / 60 / 60\r\n  const days = Math.floor(waitTimeInHours / 24).toFixed(0)\r\n  const hours = Math.floor(waitTimeInHours % 24).toFixed(0)\r\n  const mins = Math.floor(waitTimeInHours % 60).toFixed(0)\r\n  return `${days} days, ${hours}h, ${mins}min`\r\n}\r\n\r\nexport function getClaimingDate(waitTimeInSec) {\r\n  if (waitTimeInSec >= 0) {\r\n    const now = Date.now()\r\n    const newDate = new Date(now + waitTimeInSec * 1000 /*ms*/)\r\n    return newDate.toLocaleDateString()\r\n  }\r\n  return null\r\n}\r\n","import React from 'react'\r\nimport Web3 from 'web3'\r\nimport InputSlider from '../InputSlider/InputSlider'\r\nimport { convertLrcToWei, displayWei } from '../utils'\r\nimport styles from './ChangeAmount.module.scss'\r\n\r\nexport default function ChangeAmount({\r\n  text,\r\n  max,\r\n  amount,\r\n  submitAmountChange,\r\n  tokenSymbol = 'LRC',\r\n}) {\r\n  const inputRef = React.useRef(null)\r\n  const [hasChanged, setHasChanged] = React.useState(false)\r\n  const [newAmount, setNewAmount] = React.useState(0)\r\n\r\n  React.useEffect(() => {\r\n    updateAmount(amount, false)\r\n  }, [amount])\r\n\r\n  const updateAmount = (newValue, hasChanged = true) => {\r\n    if (newValue >= 0) {\r\n      setNewAmount(newValue)\r\n      inputRef.current.value = displayWei(newValue)\r\n      if (hasChanged) setHasChanged(true)\r\n    }\r\n  }\r\n\r\n  const handleBlur = (newLrcValue) => {\r\n    if (+newLrcValue >= 0) {\r\n      updateAmount(convertLrcToWei(newLrcValue))\r\n    }\r\n  }\r\n\r\n  const sliderChange = (sliderValue) => {\r\n    let amountBN = new Web3.utils.BN(max)\r\n    amountBN = amountBN.muln(+sliderValue)\r\n    amountBN = amountBN.divn(100)\r\n\r\n    updateAmount(amountBN)\r\n  }\r\n\r\n  const submit = () => {\r\n    submitAmountChange(newAmount)\r\n    updateAmount(0)\r\n  }\r\n\r\n  const isDisabled = max <= 0\r\n\r\n  return (\r\n    <div className={styles.changeAmount}>\r\n      <label>{text}</label>&nbsp;\r\n      <input\r\n        type=\"text\"\r\n        ref={inputRef}\r\n        onChange={(e) => {\r\n          setHasChanged(true)\r\n        }}\r\n        onBlur={(e) => handleBlur(e.target.value)}\r\n        disabled={isDisabled}\r\n      />{' '}\r\n      {tokenSymbol}\r\n      <button\r\n        value=\"Approve\"\r\n        onClick={submit}\r\n        disabled={isDisabled || !hasChanged}\r\n        className={styles.submit}\r\n      >\r\n        Approve\r\n      </button>\r\n      <InputSlider\r\n        onChange={sliderChange}\r\n        initialPercent={max > 0 ? (newAmount / max) * 100 : 0}\r\n        disabled={isDisabled}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { displayWei } from './utils'\r\n\r\nexport function TokenAmount({ amountInWei, symbol = 'LRC' }) {\r\n  const stringWithDot = displayWei(amountInWei)\r\n  const [integerPart, fractionalPart] = stringWithDot?.split('.') ?? [0, 0]\r\n  return (\r\n    <>\r\n      <span>{integerPart}</span>\r\n      <span style={{ fontSize: '2rem' }}>.</span>\r\n      <span style={{ fontSize: '0.75rem' }}>{fractionalPart ?? 0}</span>\r\n      <span style={{ paddingLeft: '0.5em' }}>{symbol}</span>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport LrcService from '../../services/LrcService'\r\nimport { getWaitTimeInDays, getClaimingDate } from '../utils'\r\nimport { TokenAmount } from '../TokenAmount'\r\nimport styles from './ClaimComponent.module.scss'\r\n\r\nexport function ClaimComponent({\r\n  address,\r\n  stakingData,\r\n  refreshAccountInfo = (_) => {},\r\n}) {\r\n  const [error, setError] = React.useState(null)\r\n  const [totalStaking, setTotalStaking] = React.useState('')\r\n  const [totalPrize, setTotalPrize] = React.useState(0)\r\n\r\n  const { pendingReward, rewardWaitTime } = stakingData ?? {\r\n    pendingReward: '0',\r\n    rewardWaitTime: 0,\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    LrcService.getTotalStaking().then((result) => {\r\n      setTotalStaking(result)\r\n    })\r\n    LrcService.getProtocolFeeVaultValue().then((feeAmount) => {\r\n      setTotalPrize(feeAmount)\r\n    })\r\n  }, [stakingData])\r\n\r\n  const claimReward = () => {\r\n    LrcService.claimReward(address)\r\n      .then((result) => {\r\n        console.log('claimReward result', result)\r\n        refreshAccountInfo()\r\n        setError(null)\r\n      })\r\n      .catch((error) => {\r\n        console.error(error)\r\n        setError(error)\r\n      })\r\n  }\r\n\r\n  const canClaimReward = rewardWaitTime <= 0\r\n  return (\r\n    <div className={styles.claim}>\r\n      <h4>Claim reward</h4>\r\n\r\n      <div>\r\n        All users staked tokens:{' '}\r\n        <TokenAmount amountInWei={totalStaking} symbol=\"LRC\" />\r\n      </div>\r\n\r\n      <div>\r\n        Total fee prize: <TokenAmount amountInWei={totalPrize} symbol=\"LRC\" />\r\n      </div>\r\n\r\n      <div>\r\n        Your pending reward:&nbsp;\r\n        <TokenAmount amountInWei={pendingReward} symbol=\"LRC\" />\r\n      </div>\r\n\r\n      <div>\r\n        Wait time before claiming reward: &nbsp;\r\n        {getWaitTimeInDays(rewardWaitTime)} &nbsp;\r\n        {rewardWaitTime && <span>({getClaimingDate(rewardWaitTime)})</span>}\r\n      </div>\r\n\r\n      <button onClick={claimReward} disabled={!canClaimReward}>\r\n        Claim reward\r\n      </button>\r\n\r\n      {error && <div className={styles.error}>Claim reward has failed</div>}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport LrcService from '../../services/LrcService'\r\nimport {\r\n  convertLrcToWei,\r\n  getWaitTimeInDays,\r\n  getClaimingDate,\r\n  displayWei,\r\n} from '../utils'\r\nimport { TokenAmount } from '../TokenAmount'\r\nimport ChangeAmount from '../ChangeAmount/ChangeAmount'\r\n\r\nimport styles from './withdraw.module.scss'\r\n\r\nexport function Withdraw({\r\n  address,\r\n  stakingData,\r\n  refreshAccountInfo = (_) => {},\r\n}) {\r\n  const [error, setError] = React.useState()\r\n  const [amount, setAmount] = React.useState(0)\r\n  const { balance, withdrawalWaitTime } = stakingData ?? {\r\n    balance: 0,\r\n    withdrawalWaitTime: 0,\r\n  }\r\n\r\n  const withdraw = (amount) => {\r\n    if (amount > 0) {\r\n      const amountInWei = convertLrcToWei(amount)\r\n      LrcService.withdraw(address, amountInWei)\r\n        .then(() => {\r\n          setAmount(0)\r\n          refreshAccountInfo()\r\n          setError(null)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n          setError(`Withdraw of ${displayWei(amount)} has failed`)\r\n        })\r\n    } else setError('Amount has to be larger then zero')\r\n  }\r\n\r\n  const canWithdraw = withdrawalWaitTime <= 0\r\n\r\n  return (\r\n    <div className={styles.withdraw}>\r\n      <h4>Withdraw tokens</h4>\r\n\r\n      <div>\r\n        Withdrawal wait time:&nbsp;\r\n        {getWaitTimeInDays(withdrawalWaitTime)}\r\n        &nbsp; ({getClaimingDate(withdrawalWaitTime)})\r\n      </div>\r\n\r\n      <div>\r\n        Withdraw staked amount:{' '}\r\n        <TokenAmount amountInWei={balance} symbol=\"LRC\" />\r\n      </div>\r\n\r\n      <ChangeAmount\r\n        text={'Withdraw amount:'}\r\n        max={canWithdraw ? balance : 0}\r\n        amount={amount}\r\n        submitAmountChange={withdraw}\r\n      />\r\n\r\n      {error && <div className={styles.error}>{error?.toString()}</div>}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport LrcService from '../../services/LrcService'\r\nimport { ClaimComponent } from '../Claim/ClaimComponent'\r\nimport { Withdraw } from '../Withdraw/Withdraw'\r\nimport { weiMin, displayWei } from '../utils'\r\nimport { TokenAmount } from '../TokenAmount'\r\nimport ChangeAmount from '../ChangeAmount/ChangeAmount'\r\n\r\nimport styles from './staking.module.scss'\r\n\r\n// const userStaking = {\r\n//   withdrawalWaitTime: 0 /*uint256 the time you need to wait (seconds) before you can withdraw staked LRC */,\r\n//   rewardWaitTime: 0 /*uint256* - the time you need to wait (seconds) before you can claim LRC reward */,\r\n//   balance: 0 /*uint256*/,\r\n//   pendingReward: 0 /*uint256*/,\r\n// }\r\n\r\nexport function StakingComponent({\r\n  address,\r\n  allowance,\r\n  balance,\r\n  refreshAccountInfo = (_) => {},\r\n}) {\r\n  const [stakingData, setStakingData] = React.useState(null)\r\n  const [error, setError] = React.useState(null)\r\n  const [message, setMessage] = React.useState(null)\r\n  const maxStakeAmount = weiMin(allowance, balance)\r\n  const [newStakeAmount, setNewStakeAmount] = React.useState(0)\r\n\r\n  const refreshAddressStaking = (address) => {\r\n    LrcService.getUserStaking(address).then((result) => {\r\n      setStakingData(result)\r\n    })\r\n  }\r\n\r\n  const stakeLrc = (newStakeAmount) => {\r\n    console.log('stakeLrc', { newStakeAmount })\r\n\r\n    LrcService.stake(address, newStakeAmount)\r\n      .then((result) => {\r\n        console.log('Staked', result)\r\n        setError(null)\r\n        setMessage(`Successfully staked ${displayWei(newStakeAmount)} LRC`)\r\n        setNewStakeAmount(0)\r\n        refreshAddressStaking(address)\r\n        refreshAccountInfo(address)\r\n      })\r\n      .catch((error) => {\r\n        console.error(error)\r\n        setError(error.toString())\r\n        setMessage(null)\r\n      })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    refreshAddressStaking(address)\r\n  }, [address])\r\n\r\n  return (\r\n    <div className={styles.staking}>\r\n      <h4>Staking</h4>\r\n      <div>Staking locks up your token for 90 days.</div>\r\n      <div>\r\n        Already staked:{' '}\r\n        <TokenAmount amountInWei={stakingData?.balance} symbol=\"LRC\" />{' '}\r\n      </div>\r\n      <div>\r\n        You can stake:{' '}\r\n        <TokenAmount\r\n          amountInWei={+allowance ? maxStakeAmount : 0}\r\n          symbol=\"LRC\"\r\n        />\r\n      </div>\r\n\r\n      <ChangeAmount\r\n        text={'New Stake:'}\r\n        max={maxStakeAmount}\r\n        amount={newStakeAmount}\r\n        submitAmountChange={stakeLrc}\r\n      />\r\n\r\n      {!!message && <div className={styles.message}>{message}</div>}\r\n      {!!error && <div className={styles.error}>Staking LRC has failed</div>}\r\n\r\n      <ClaimComponent\r\n        stakingData={stakingData}\r\n        address={address}\r\n        refreshAccountInfo={refreshAccountInfo}\r\n      />\r\n\r\n      <Withdraw\r\n        stakingData={stakingData}\r\n        address={address}\r\n        refreshAccountInfo={refreshAccountInfo}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport LrcService from '../../services/LrcService'\r\nimport ChangeAmount from '../ChangeAmount/ChangeAmount'\r\nimport { StakingComponent } from '../Staking/StakingComponent'\r\nimport { TokenAmount } from '../TokenAmount'\r\n\r\nimport styles from './Account.module.scss'\r\n\r\nexport function Account({ address }) {\r\n  const [balance, setBalance] = React.useState(null)\r\n  const [allowance, setAllowance] = React.useState(0)\r\n  const [isLoading, setIsLoading] = React.useState(true)\r\n\r\n  const refreshAccountInfo = React.useCallback(\r\n    (address) => {\r\n      setIsLoading(true)\r\n\r\n      LrcService.getLrcBalance(address)\r\n        .then((balance) => {\r\n          setBalance(balance)\r\n        })\r\n        .catch((error) => {\r\n          console.error('getLrcBalances', error)\r\n        })\r\n\r\n      LrcService.getLrcAllowance(address)\r\n        .then((allowanceInWei) => {\r\n          setAllowance(allowanceInWei)\r\n        })\r\n        .catch((error) => {\r\n          console.error('getLrcAllowances', error)\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false)\r\n        })\r\n    },\r\n    [address],\r\n  )\r\n\r\n  const submitNewAllowance = (newAllowance) => {\r\n    console.log('submitNewAllowance', newAllowance)\r\n\r\n    LrcService.setLrcAllowance(address, newAllowance)\r\n      .then((result) => {\r\n        console.log('submitNewAllowance', result)\r\n        refreshAccountInfo(address)\r\n      })\r\n      .catch((error) => console.error(error))\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    refreshAccountInfo(address)\r\n  }, [address, refreshAccountInfo])\r\n\r\n  return (\r\n    <div className={styles.Account}>\r\n      <h3>Address: {address}</h3>\r\n      {/* {isLoading && <div>Loading...</div>} */}\r\n      <div>\r\n        Account balance: <TokenAmount amountInWei={balance} symbol=\"LRC\" />\r\n      </div>\r\n      <button onClick={() => refreshAccountInfo(address)}>Refresh</button>\r\n      <div>\r\n        Current allowance: <TokenAmount amountInWei={allowance} symbol=\"LRC\" />{' '}\r\n      </div>\r\n      <ChangeAmount\r\n        text={'New allowance:'}\r\n        max={balance}\r\n        amount={allowance}\r\n        submitAmountChange={submitNewAllowance}\r\n      />\r\n      <StakingComponent\r\n        address={address}\r\n        allowance={allowance}\r\n        balance={balance}\r\n        refreshAccountInfo={refreshAccountInfo}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport function LinkToEtherscan({ label, address, children }) {\r\n  function getUrl(address) {\r\n    return `https://etherscan.io/address/${address}`\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {label}&nbsp;\r\n      <a href={getUrl(address)}>{address}</a>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { getEthAccounts, initWeb3 } from '../services/Ethereum'\r\n\r\nimport styles from '../App.module.scss'\r\n\r\nexport function Connect({ onConnected, setAccounts }) {\r\n  const connect = (e) => {\r\n    e.preventDefault()\r\n\r\n    initWeb3().then((web3) => {\r\n      onConnected()\r\n      getEthAccounts()\r\n        .then((_accounts) => {\r\n          setAccounts(_accounts)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={styles.connectContainer}>\r\n      <h4>Loopring Staking</h4>\r\n      <button className={styles.connectButton} onClick={connect}>\r\n        Connect\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Account } from './components/Account/Account'\r\nimport {\r\n  loopringContract,\r\n  userStakingPoolContract,\r\n  protocolFeeVaultContract,\r\n  initWeb3,\r\n  initTruffle,\r\n} from './services/Ethereum'\r\nimport { LinkToEtherscan } from './components/LinkToEtherscan'\r\nimport { Connect } from './components/Connect'\r\n\r\nimport styles from './App.module.scss'\r\n\r\nfunction App() {\r\n  const [accounts, setAccounts] = React.useState([])\r\n  const [selectedAccount, setSelectedAccount] = React.useState()\r\n  const [connected, setConnected] = React.useState(false)\r\n\r\n  const onConnected = () => {\r\n    setConnected(true)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (accounts.length > 0) {\r\n      setSelectedAccount(accounts[0])\r\n    }\r\n  }, [accounts])\r\n\r\n  const connectLocal = (e) => {\r\n    initTruffle().then(() => {\r\n      initWeb3()\r\n    })\r\n  }\r\n\r\n  const accountSelected = (e) => {\r\n    setSelectedAccount(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <main className={styles.App}>\r\n      <section className={styles.container}>\r\n        {!connected && (\r\n          <>\r\n            <Connect setAccounts={setAccounts} onConnected={onConnected} />\r\n            <button className={styles.testBtn} onClick={connectLocal}>\r\n              Test Connect Local\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        <h2>Accounts</h2>\r\n        <select onChange={accountSelected}>\r\n          {accounts.map((account) => (\r\n            <option key={account} value={account}>\r\n              {account}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {selectedAccount && (\r\n          <Account key={selectedAccount} address={selectedAccount} />\r\n        )}\r\n\r\n        <LinkToEtherscan\r\n          label={'Loopring token contract:'}\r\n          address={loopringContract?._address}\r\n        ></LinkToEtherscan>\r\n        <LinkToEtherscan\r\n          label={'Loopring User Staking Pool contract:'}\r\n          address={userStakingPoolContract?._address}\r\n        ></LinkToEtherscan>\r\n        <LinkToEtherscan\r\n          label={'Protocol Fee Vault Contract:'}\r\n          address={protocolFeeVaultContract?._address}\r\n        ></LinkToEtherscan>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputSlider\":\"InputSlider_InputSlider__1qHC4\",\"h4Container\":\"InputSlider_h4Container__2j_qo\",\"h4Subcontainer\":\"InputSlider_h4Subcontainer__2nib_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"staking\":\"staking_staking__23Xv7\",\"message\":\"staking_message__2kyaV\",\"error\":\"staking_error__3UfTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"changeAmount\":\"ChangeAmount_changeAmount__1lB31\",\"submit\":\"ChangeAmount_submit__2EGUm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"claim\":\"ClaimComponent_claim__GU38H\",\"error\":\"ClaimComponent_error__2jmEV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withdraw\":\"withdraw_withdraw__1tp8t\",\"error\":\"withdraw_error__2SXBa\"};"],"sourceRoot":""}